"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var http_1 = require("@angular/common/http");
var HttpIntercept = (function () {
    function HttpIntercept() {
    }
    HttpIntercept.prototype.intercept = function (req, next) {
        this.headers = new http_1.HttpHeaders;
        if (localStorage.getItem('token') !== undefined && localStorage.getItem('token') !== null && localStorage.getItem('token') !== '') {
            this.headers = new http_1.HttpHeaders({
                'Authorization': localStorage.getItem('token').toString(),
                'Content-Type': 'application/json'
            });
        }
        else {
            this.headers = new http_1.HttpHeaders({
                'Content-Type': 'application/json'
            });
        }
        var authReq = req.clone({ headers: this.headers });
        return next.handle(authReq);
    };
    return HttpIntercept;
}());
HttpIntercept = __decorate([
    core_1.Injectable()
], HttpIntercept);
exports.HttpIntercept = HttpIntercept;
//# sourceMappingURL=http.intercept.js.map